
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: cloudstackclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: CloudStackCluster
    listKind: CloudStackClusterList
    plural: cloudstackclusters
    singular: cloudstackcluster
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: CloudStackCluster is the Schema for the cloudstackclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CloudStackClusterSpec defines the desired state of CloudStackCluster.
            properties:
              account:
                description: CloudStack account.
                type: string
              controlPlaneEndpoint:
                description: The kubernetes control plane endpoint.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              domain:
                description: CloudStack domain.
                type: string
              identityRef:
                description: CloudStackIdentityReference is a reference to an infrastructure
                  provider identity to be used to provision cluster resources.
                properties:
                  kind:
                    description: Kind of the identity. Must be supported by the infrastructure
                      provider and may be either cluster or namespace-scoped.
                    minLength: 1
                    type: string
                  name:
                    description: Name of the infrastructure identity to be used.
                    type: string
                required:
                - kind
                - name
                type: object
              zones:
                items:
                  properties:
                    id:
                      description: ID.
                      type: string
                    name:
                      description: Name.
                      type: string
                    network:
                      description: The network within the Zone to use.
                      properties:
                        id:
                          description: Cloudstack Network ID the cluster is built
                            in.
                          type: string
                        name:
                          description: Cloudstack Network Name the cluster is built
                            in.
                          type: string
                        type:
                          description: Cloudstack Network Type the cluster is built
                            in.
                          type: string
                      type: object
                  required:
                  - network
                  type: object
                type: array
            required:
            - controlPlaneEndpoint
            - zones
            type: object
          status:
            description: The actual cluster state reported by CloudStack.
            properties:
              domainID:
                description: Cloudstack Domain ID the cluster is built in.
                type: string
              failureDomains:
                additionalProperties:
                  description: FailureDomainSpec is the Schema for Cluster API failure
                    domains. It allows controllers to understand how many failure
                    domains a cluster can optionally span across.
                  properties:
                    attributes:
                      additionalProperties:
                        type: string
                      description: Attributes is a free form map of attributes an
                        infrastructure provider might use or require.
                      type: object
                    controlPlane:
                      description: ControlPlane determines if this failure domain
                        is suitable for use by control plane machines.
                      type: boolean
                  type: object
                description: CAPI recognizes failure domains as a method to spread
                  machines. CAPC sets failure domains to indicate functioning Zones.
                type: object
              loadBalancerRuleID:
                description: The ID of the lb rule used to assign VMs to the lb.
                type: string
              publicIPID:
                description: The CS public IP ID to use for the k8s endpoint.
                type: string
              publicIPNetworkID:
                description: The ID of the network the PublicIP is in.
                type: string
              ready:
                description: Reflects the readiness of the CS cluster.
                type: boolean
              zones:
                additionalProperties:
                  properties:
                    id:
                      description: ID.
                      type: string
                    name:
                      description: Name.
                      type: string
                    network:
                      description: The network within the Zone to use.
                      properties:
                        id:
                          description: Cloudstack Network ID the cluster is built
                            in.
                          type: string
                        name:
                          description: Cloudstack Network Name the cluster is built
                            in.
                          type: string
                        type:
                          description: Cloudstack Network Type the cluster is built
                            in.
                          type: string
                      type: object
                  required:
                  - network
                  type: object
                description: The status of the cluster's ACS Zones.
                type: object
            required:
            - ready
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1beta2
    schema:
      openAPIV3Schema:
        description: CloudStackCluster is the Schema for the cloudstackclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CloudStackClusterSpec defines the desired state of CloudStackCluster.
            properties:
              account:
                description: CloudStack account.
                type: string
              controlPlaneEndpoint:
                description: The kubernetes control plane endpoint.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              domain:
                description: CloudStack domain.
                type: string
              failureDomains:
                items:
                  properties:
                    account:
                      description: CloudStack account.
                      type: string
                    credentialsRef:
                      description: 'ObjectReference contains enough information to
                        let you inspect or modify the referred object. --- New uses
                        of this type are discouraged because of difficulty describing
                        its usage when embedded in APIs.  1. Ignored fields.  It includes
                        many fields which are not generally honored.  For instance,
                        ResourceVersion and FieldPath are both very rarely valid in
                        actual usage.  2. Invalid usage help.  It is impossible to
                        add specific help for individual usage.  In most embedded
                        usages, there are particular     restrictions like, "must
                        refer only to types A and B" or "UID not honored" or "name
                        must be restricted".     Those cannot be well described when
                        embedded.  3. Inconsistent validation.  Because the usages
                        are different, the validation rules are different by usage,
                        which makes it hard for users to predict what will happen.  4.
                        The fields are both imprecise and overly precise.  Kind is
                        not a precise mapping to a URL. This can produce ambiguity     during
                        interpretation and require a REST mapping.  In most cases,
                        the dependency is on the group,resource tuple     and the
                        version of the actual struct is irrelevant.  5. We cannot
                        easily change it.  Because this type is embedded in many locations,
                        updates to this type     will affect numerous schemas.  Don''t
                        make new APIs embed an underspecified API type they do not
                        control. Instead of using this type, create a locally provided
                        and used type that is well-focused on your reference. For
                        example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                        .'
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    domain:
                      description: CloudStack domain.
                      type: string
                    zone:
                      description: The ACS Zone for this failure domain.
                      properties:
                        id:
                          description: ID.
                          type: string
                        name:
                          description: Name.
                          type: string
                        network:
                          description: The network within the Zone to use.
                          properties:
                            id:
                              description: Cloudstack Network ID the cluster is built
                                in.
                              type: string
                            name:
                              description: Cloudstack Network Name the cluster is
                                built in.
                              type: string
                            type:
                              description: Cloudstack Network Type the cluster is
                                built in.
                              type: string
                          type: object
                      required:
                      - network
                      type: object
                  required:
                  - credentialsRef
                  - zone
                  type: object
                type: array
              identityRef:
                description: CloudStackIdentityReference is a reference to an infrastructure
                  provider identity to be used to provision cluster resources.
                properties:
                  kind:
                    description: Kind of the identity. Must be supported by the infrastructure
                      provider and may be either cluster or namespace-scoped.
                    minLength: 1
                    type: string
                  name:
                    description: Name of the infrastructure identity to be used.
                    type: string
                required:
                - kind
                - name
                type: object
            required:
            - controlPlaneEndpoint
            - failureDomains
            type: object
          status:
            description: The actual cluster state reported by CloudStack.
            properties:
              domainID:
                description: Cloudstack Domain ID the cluster is built in.
                type: string
              failureDomains:
                additionalProperties:
                  description: FailureDomainSpec is the Schema for Cluster API failure
                    domains. It allows controllers to understand how many failure
                    domains a cluster can optionally span across.
                  properties:
                    attributes:
                      additionalProperties:
                        type: string
                      description: Attributes is a free form map of attributes an
                        infrastructure provider might use or require.
                      type: object
                    controlPlane:
                      description: ControlPlane determines if this failure domain
                        is suitable for use by control plane machines.
                      type: boolean
                  type: object
                description: CAPI recognizes failure domains as a method to spread
                  machines. CAPC sets failure domains to indicate functioning Zones.
                type: object
              loadBalancerRuleID:
                description: The ID of the lb rule used to assign VMs to the lb.
                type: string
              publicIPID:
                description: The CS public IP ID to use for the k8s endpoint.
                type: string
              publicIPNetworkID:
                description: The ID of the network the PublicIP is in.
                type: string
              ready:
                description: Reflects the readiness of the CS cluster.
                type: boolean
              zones:
                additionalProperties:
                  description: CloudStackFailureDomainStatus defines the observed
                    state of CloudStackFailureDomain
                  properties:
                    domainID:
                      description: Cloudstack Domain ID the failure domain is built
                        in.
                      type: string
                    ready:
                      description: Reflects the readiness of the CS failure domain.
                      type: boolean
                  required:
                  - ready
                  type: object
                description: The status of the cluster's ACS Failure Domains.
                type: object
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
